#!/usr/bin/octave -qf

source('octave/graficar.m');
source('octave/leer_datos.m');

familias = {'Grafo completo', 'Lattice I'};
familias_slug = {'grafo-completo', 'lattice-i'};
algoritmos = {'Goloso', 'Local', 'Tab\''u'};
algoritmos_slug = {'goloso', 'local', 'tabú'};
metricas = {'tiempo', 'frontera'};

for f = 1:length(familias_slug)
	for m = 1:length(metricas)
		printf('Graficando familia "%s", métrica "%s"\n', familias_slug{f}, metricas{m});

		datos = {};

		for a = 1:length(algoritmos_slug)
			archivo = strcat('mediciones/',
				              algoritmos_slug{a}, '-',
				              familias_slug{f}, '.csv');
			datos{columns(datos) + 1} = leer_datos(archivo, metricas{m});
		end

		if(strcmp(metricas{m}, 'tiempo'))
			metrica_titulo = 'Tiempo de ejecuci\''on';
		else
			metrica_titulo = 'Tamaño de las fronteras de las CMF halladas';
		end

		titulo = cstrcat(familias{f}, ': ', metrica_titulo);
		graficar(algoritmos, datos, titulo, struct('eje_y', metricas{m}));

		archivo_tex = strcat(familias_slug{f}, '-', metricas{m});
		cd('tex');
		print(archivo_tex, '-S950,450', '-dtex');
		cd('..');

		close();
	end 
end




% datos = {};

% datos{columns(datos) + 1} = leer_datos('mediciones/goloso-lattice-i.csv', metrica);
% datos{columns(datos) + 1} = leer_datos('mediciones/local-lattice-i.csv', metrica);
% datos{columns(datos) + 1} = leer_datos('mediciones/tabú-lattice-i.csv', metrica);

% graficar(algoritmos, datos, struct('eje_y', metrica));

% pause();

% cd('tex');
% print(grafico, '-S950,450', '-dtex');